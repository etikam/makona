#!/usr/bin/env python
"""
Script pour assigner les cat√©gories existantes aux classes
"""
import os
import sys
import django

# Ajouter le r√©pertoire du projet au path Python
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Configurer Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from categories.models import CategoryClass, Category

def assign_existing_categories():
    """Assigner les cat√©gories existantes aux classes"""
    
    # R√©cup√©rer les classes
    try:
        arts_class = CategoryClass.objects.get(name='Arts & Culture')
    except CategoryClass.DoesNotExist:
        print("‚ùå Classe Arts & Culture non trouv√©e")
        return
    
    # Assigner les cat√©gories existantes √† Arts & Culture
    arts_categories = ['Art Visuel', 'Arts Visuels', 'Cinema & Video', 'Danse', 'Litterature', 'Musique', 'Photographie']
    
    total_assigned = 0
    
    print(f"üìÇ Classe: Arts & Culture")
    
    for category_name in arts_categories:
        try:
            category = Category.objects.get(name=category_name)
            if not category.category_class:
                category.category_class = arts_class
                category.save()
                print(f"  ‚úÖ {category_name} assign√© √† Arts & Culture")
                total_assigned += 1
            else:
                print(f"  ‚ÑπÔ∏è  {category_name} d√©j√† assign√© √† {category.category_class.name}")
        except Category.DoesNotExist:
            print(f"  ‚ö†Ô∏è  Cat√©gorie non trouv√©e: {category_name}")
    
    return total_assigned

def main():
    """Fonction principale"""
    print("üöÄ Attribution des cat√©gories existantes aux classes...")
    print("=" * 60)
    
    # Assigner les cat√©gories
    total_assigned = assign_existing_categories()
    
    print("=" * 60)
    print(f"üìä R√©sum√©:")
    print(f"   ‚Ä¢ {total_assigned} cat√©gories assign√©es")
    print(f"   ‚Ä¢ {Category.objects.filter(category_class__isnull=False).count()} cat√©gories avec classe")
    print(f"   ‚Ä¢ {Category.objects.filter(category_class__isnull=True).count()} cat√©gories sans classe")
    
    print("\n‚úÖ Attribution termin√©e avec succ√®s!")

if __name__ == '__main__':
    main()
