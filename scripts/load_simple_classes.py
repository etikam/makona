#!/usr/bin/env python
"""
Script simple pour charger des classes de cat√©gories
"""
import os
import sys
import django

# Ajouter le r√©pertoire du projet au path Python
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Configurer Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from categories.models import CategoryClass

def create_simple_classes():
    """Cr√©er des classes de cat√©gories simples"""
    
    classes_data = [
        {
            'name': 'Arts & Culture',
            'description': 'Cat√©gories artistiques et culturelles incluant musique, danse, art visuel, litt√©rature et th√©√¢tre',
            'order': 1
        },
        {
            'name': 'Innovation & Technologie',
            'description': 'Cat√©gories li√©es √† l\'innovation technologique, startups et recherche',
            'order': 2
        },
        {
            'name': 'Sport & Fitness',
            'description': 'Cat√©gories sportives et de fitness pour tous les niveaux',
            'order': 3
        },
        {
            'name': '√âducation & Formation',
            'description': 'Cat√©gories √©ducatives et de formation professionnelle',
            'order': 4
        },
        {
            'name': 'Social & Communautaire',
            'description': 'Cat√©gories li√©es aux initiatives sociales et communautaires',
            'order': 5
        },
        {
            'name': 'Environnement & Durabilit√©',
            'description': 'Cat√©gories li√©es √† l\'environnement et au d√©veloppement durable',
            'order': 6
        }
    ]
    
    created_classes = []
    
    for class_data in classes_data:
        category_class, created = CategoryClass.objects.get_or_create(
            name=class_data['name'],
            defaults=class_data
        )
        
        if created:
            print(f"‚úÖ Classe cr√©√©e: {category_class.name}")
            created_classes.append(category_class)
        else:
            print(f"‚ÑπÔ∏è  Classe existante: {category_class.name}")
            created_classes.append(category_class)
    
    return created_classes

def main():
    """Fonction principale"""
    print("üöÄ Chargement des classes de cat√©gories...")
    print("=" * 50)
    
    # Cr√©er les classes
    classes = create_simple_classes()
    
    print("=" * 50)
    print(f"üìä R√©sum√©:")
    print(f"   ‚Ä¢ {len(classes)} classes de cat√©gories")
    print(f"   ‚Ä¢ {CategoryClass.objects.count()} classes au total")
    
    print("\n‚úÖ Chargement termin√© avec succ√®s!")
    print("\nüéØ Vous pouvez maintenant:")
    print("   ‚Ä¢ Acc√©der au dashboard admin")
    print("   ‚Ä¢ G√©rer les classes de cat√©gories")
    print("   ‚Ä¢ Assigner des cat√©gories existantes aux classes")

if __name__ == '__main__':
    main()
