# Dockerfile pour le frontend React/Vite - Makona Awards 2025
FROM node:20-alpine AS builder

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers de dépendances
COPY front-end/package*.json ./

# Installer toutes les dépendances (dev + prod) pour le build
RUN npm ci

# Copier le code source
COPY front-end/ .

# Debug: Vérifier la structure des fichiers
RUN echo "=== Structure du répertoire src ===" && \
    find src -type f -name "*.js" | head -20 && \
    echo "=== Contenu du dossier lib ===" && \
    ls -la src/lib/ && \
    echo "=== Vérification du fichier utils.js ===" && \
    test -f src/lib/utils.js && echo "Fichier utils.js trouvé" || echo "Fichier utils.js NON TROUVÉ" && \
    echo "=== Contenu du fichier utils.js ===" && \
    cat src/lib/utils.js

# Créer le fichier utils.js s'il n'existe pas
RUN mkdir -p src/lib && \
    echo 'import { clsx } from "clsx"' > src/lib/utils.js && \
    echo 'import { twMerge } from "tailwind-merge"' >> src/lib/utils.js && \
    echo '' >> src/lib/utils.js && \
    echo 'export function cn(...inputs) {' >> src/lib/utils.js && \
    echo '  return twMerge(clsx(inputs))' >> src/lib/utils.js && \
    echo '}' >> src/lib/utils.js && \
    echo "=== Fichier utils.js créé ===" && \
    cat src/lib/utils.js

# Construire l'application
RUN npm run build

# Stage de production avec serveur HTTP simple
FROM node:20-alpine

# Installer serve pour servir les fichiers statiques
RUN npm install -g serve

# Créer un utilisateur non-root
RUN addgroup -g 1001 -S app && \
    adduser -S -D -H -u 1001 -h /app -s /sbin/nologin -G app -g app app

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers construits depuis le stage builder
COPY --from=builder /app/dist ./dist

# Changer les permissions
RUN chown -R app:app /app

# Changer vers l'utilisateur non-root
USER app

# Exposer le port
EXPOSE 3000

# Démarrer le serveur
CMD ["serve", "-s", "dist", "-l", "3000"]
