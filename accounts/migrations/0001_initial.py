# Generated by Django 5.2.7 on 2025-10-23 10:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeviceFingerprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fingerprint_hash",
                    models.CharField(
                        max_length=64, unique=True, verbose_name="Hash du fingerprint"
                    ),
                ),
                ("user_agent", models.TextField(verbose_name="User Agent")),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                (
                    "screen_resolution",
                    models.CharField(max_length=20, verbose_name="Résolution d'écran"),
                ),
                (
                    "timezone",
                    models.CharField(max_length=50, verbose_name="Fuseau horaire"),
                ),
                ("language", models.CharField(max_length=10, verbose_name="Langue")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière utilisation"
                    ),
                ),
            ],
            options={
                "verbose_name": "Fingerprint Device",
                "verbose_name_plural": "Fingerprints Devices",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Adresse email"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("candidate", "Candidat"),
                            ("admin", "Administrateur"),
                        ],
                        default="candidate",
                        max_length=20,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format de téléphone invalide",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Téléphone",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("guinea", "Guinée"),
                            ("liberia", "Libéria"),
                            ("sierra_leone", "Sierra Leone"),
                        ],
                        max_length=20,
                        verbose_name="Pays",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Email vérifié"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CandidateProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        help_text="Présentez-vous en quelques mots (max 1000 caractères)",
                        max_length=1000,
                        verbose_name="Biographie",
                    ),
                ),
                ("facebook_url", models.URLField(blank=True, verbose_name="Facebook")),
                (
                    "instagram_url",
                    models.URLField(blank=True, verbose_name="Instagram"),
                ),
                ("youtube_url", models.URLField(blank=True, verbose_name="YouTube")),
                ("website_url", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={"user_type": "candidate"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile Candidat",
                "verbose_name_plural": "Profiles Candidats",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OneTimePassword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=6, verbose_name="Code OTP")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Date d'expiration")),
                (
                    "is_used",
                    models.BooleanField(default=False, verbose_name="Code utilisé"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="otp_codes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Code OTP",
                "verbose_name_plural": "Codes OTP",
                "ordering": ["-created_at"],
            },
        ),
    ]
